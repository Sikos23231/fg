name: Release builds with vcpkg

on:
  push:
    tags:
      - v*

jobs:
  unix:
    name: ${{ matrix.os }}-${{ matrix.cxx }}-${{ matrix.buildtype }}-luajit=${{ matrix.luajit }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      matrix:
        name: [ubuntu-gcc, macos-clang, windows-msvc]
        buildtype: [Release]
        luajit: [on]
        include:
          - name: ubuntu-gcc
            os: ubuntu
            cxx: g++
            cc: gcc
          - name: macos-clang
            os: macos
            cxx: clang++
            cc: clang
          - name: windows-msvc
            os: windows
            cxx: cl.exe
            cc: cl.exe

    env:
      CXX: ${{ matrix.cxx }}
      CC: ${{ matrix.cc }}

    steps:
      - uses: actions/checkout@v3

      - name: Get latest CMake
        # Using 'latest' branch, the latest CMake is installed.
        uses: lukka/get-cmake@latest

      - name: Enable LuaJIT
        if: ${{ matrix.luajit }} == "on"
        run: echo "VCPKG_FEATURE_FLAGS=luajit" >> $GITHUB_ENV

      - name: Set Environment vars
        run: |
          echo "CXX=${{ matrix.cxx }}" >> $GITHUB_ENV
          echo "CC=${{ matrix.cc }}" >> $GITHUB_ENV

      - name: Run vcpkg
        uses: lukka/run-vcpkg@v11
        with:
          vcpkgGitCommitId: 5b1214315250939257ef5d62ecdcbca18cf4fb1c

      - name: Build with CMake
        uses: lukka/run-cmake@v10
        with:
          buildPreset: ninja-vcpkg
          configurePreset: ninja-vcpkg

      - name: Prepare datapack contents
        run: |
          pwd
          ls -al
          find . -maxdepth 1 ! -name data ! -name config.lua.dist ! -name key.pem ! -name LICENSE ! -name README.md ! -name schema.sql -exec rm -r {} \;
          mv ../build/tfs ../build/tfs.exe* ../build/*.dll .
        shell: bash

      - name: Zip the release files
        uses: thedoctor0/zip-release@master
        with:
          type: tar
          filename: tfs-${{ github.ref_name }}-${{ matrix.name }}.tar.gz
          path: forgottenserver
          directory: ../

      - name: Upload release artifact
        uses: ncipollo/release-action@v3
        with:
          artifacts: ../tfs-${{ github.ref_name }}-${{ matrix.name }}.tar.gz
          generateReleaseNotes: true
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
        shell: bash

      - name: Zip the release files
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          filename: tfs-${{ github.ref_name }}-${{ matrix.name }}.zip
          path: forgottenserver
          directory: ../

      - name: Upload release artifact
        uses: ncipollo/release-action@v1
        with:
          artifacts: ../tfs-${{ github.ref_name }}-${{ matrix.name }}.zip
          generateReleaseNotes: true
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
