name: Release builds with vcpkg

on:
  push:
    tags:
      - v*

jobs:
  unix:
    name: ${{ matrix.os }}-${{ matrix.cxx }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        name: [ubuntu-gcc, macos-clang]
        buildtype: [release]
        luajit: [enabled]
        include:
          - name: ubuntu-gcc
            os: ubuntu
            cxx: g++
            cc: gcc
            triplet: x64-linux

          - name: macos-clang
            os: macos
            cxx: clang++
            cc: clang
            triplet: x64-osx

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run vcpkg
        uses: lukka/run-vcpkg@v7
        with:
          vcpkgArguments: boost-asio boost-filesystem boost-iostreams boost-lockfree boost-system boost-variant cryptopp libmariadb luajit vcpkg-tool-ninja vcpkg-tool-meson
          vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
          vcpkgTriplet: ${{ matrix.triplet }}
          appendedCacheKey: ${{ matrix.name }}${{ matrix.buildtype }}${{ matrix.luajit }}
          vcpkgGitCommitId: a7b6122f6b6504d16d96117336a0562693579933

      - name: Build with meson
        run: meson.py setup -D buildtype=${{ matrix.buildtype }} -D luajit=${{ matrix.luajit }} ${{ runner.workspace }}/build && ninja -C ${{ runner.workspace }}/build
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
          PATH: ${{ runner.workspace }}/vcpkg/installed/${{ matrix.triplet }}/tools/meson/:${{ runner.workspace }}/vcpkg/installed/${{ matrix.triplet }}/tools/ninja/:$PATH
          BOOST_ROOT: ${{ runner.workspace }}/vcpkg/installed/${{ matrix.triplet }}
          PKG_CONFIG_PATH: ${{ runner.workspace }}/vcpkg/installed/${{ matrix.triplet }}/lib/pkgconfig

      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: Prepare datapack contents
        run: |
          pwd
          ls -al
          find . -maxdepth 1 ! -name data ! -name config.lua.dist ! -name key.pem ! -name LICENSE ! -name README.md ! -name schema.sql -exec rm -r {} \;
          mv ../build/tfs .
        shell: bash

      - name: Zip the release files
        uses: thedoctor0/zip-release@master
        with:
          type: tar
          filename: tfs-${{ github.ref_name }}-${{ matrix.name }}.tar.gz
          path: forgottenserver
          directory: ../

      - name: Upload release artifact
        uses: ncipollo/release-action@v1
        with:
          artifacts: ../tfs-${{ github.ref_name }}-${{ matrix.name }}.tar.gz
          generateReleaseNotes: true
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}

  windows:
    name: ${{ matrix.os }}-${{ matrix.cxx }}
    runs-on: ${{ matrix.os }}-latest
    strategy:
      fail-fast: false
      max-parallel: 8
      matrix:
        name: [windows-msvc]
        buildtype: [release]
        luajit: [enabled]
        include:
          - name: windows-msvc
            os: windows
            cxx: cl.exe
            cc: cl.exe
            triplet: x64-windows

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Run vcpkg
        uses: lukka/run-vcpkg@v7
        with:
          vcpkgArguments: boost-asio boost-filesystem boost-iostreams boost-lockfree boost-system boost-variant cryptopp libmariadb luajit python3 vcpkg-tool-ninja vcpkg-tool-meson
          vcpkgDirectory: ${{ runner.workspace }}/vcpkg/
          vcpkgTriplet: ${{ matrix.triplet }}
          appendedCacheKey: ${{ matrix.name }}${{ matrix.buildtype }}${{ matrix.luajit }}
          vcpkgGitCommitId: a7b6122f6b6504d16d96117336a0562693579933

      - name: Build with meson
        run: meson.py setup -D buildtype=${{ matrix.buildtype }} -D luajit=${{ matrix.luajit }} ${{ runner.workspace }}/build && ninja -C ${{ runner.workspace }}/build
        env:
          CC: ${{ matrix.cc }}
          CXX: ${{ matrix.cxx }}
          PATH: ${{ runner.workspace }}/vcpkg/installed/${{ matrix.triplet }}/tools/meson/:${{ runner.workspace }}/vcpkg/installed/${{ matrix.triplet }}/tools/ninja/:$PATH
          BOOST_ROOT: ${{ runner.workspace }}/vcpkg/installed/${{ matrix.triplet }}
          PKG_CONFIG_PATH: ${{ runner.workspace }}/vcpkg/installed/${{ matrix.triplet }}/lib/pkgconfig

      - name: dir
        run: find $RUNNER_WORKSPACE
        shell: bash

      - name: Prepare datapack contents
        run: |
          pwd
          ls -al
          find . -maxdepth 1 ! -name data ! -name config.lua.dist ! -name key.pem ! -name LICENSE ! -name README.md ! -name schema.sql -exec rm -r {} \;
          mv ../build/tfs.exe* .
          mv ../build/*.dll .
        shell: bash

      - name: Zip the release files
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          filename: tfs-${{ github.ref_name }}-${{ matrix.name }}.zip
          path: forgottenserver
          directory: ../

      - name: Upload release artifact
        uses: ncipollo/release-action@v1
        with:
          artifacts: ../tfs-${{ github.ref_name }}-${{ matrix.name }}.zip
          generateReleaseNotes: true
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
